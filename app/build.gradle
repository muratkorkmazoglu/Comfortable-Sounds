apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'org.jlleitschuh.gradle.ktlint'
buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
        maven { url "https://plugins.gradle.org/m2/" }
        jcenter()
        maven { url "https://jitpack.io" }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.31.0'
        classpath "org.jlleitschuh.gradle:ktlint-gradle:8.2.0"
    }
}

def STRING = 'String'
def BUILD_TIME = 'BUILD_TIME'


repositories {
    maven { url 'https://maven.fabric.io/public' }
    maven { url 'https://jitpack.io' }
}
android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"

    defaultConfig {
        applicationId "com.murat.corfortablesounds"
        minSdkVersion 19
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField STRING, BUILD_TIME, "\"${rootProject.ext.buildTime}\""
        buildConfigField 'String', 'API_BASE_URL', '"http://karikafa.asameterden.com/"'
        buildConfigField 'String', 'API_TOKEN', '"5886466a00f95704b5d9724a55c6c579"'
        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled false
            zipAlignEnabled true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/atomicfu.kotlin_module'
        exclude 'META-INF/rxjava.properties'
    }
    dataBinding {
        enabled = true
    }
    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }

}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.google.android:flexbox:2.0.0'

    implementation rootProject.ext.supportv4
    implementation rootProject.ext.appCompat
    implementation rootProject.ext.recyclerView
    implementation rootProject.ext.cardView
    implementation rootProject.ext.constraintLayout
    implementation rootProject.ext.coreKtx
    implementation rootProject.ext.firebaseCore
    implementation rootProject.ext.firebaseDatabase
    implementation rootProject.ext.firebaseAuth
    implementation rootProject.ext.firebaseStorage
    implementation rootProject.ext.firebaseUiStorage
    implementation rootProject.ext.lottie
    implementation rootProject.ext.circularImageView
    implementation rootProject.ext.timber
    implementation rootProject.ext.navigationFragment
    implementation rootProject.ext.navigationUI
    implementation rootProject.ext.dagger
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.1.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.1.0'
    kapt rootProject.ext.daggerApt
    implementation rootProject.ext.rxJava
    implementation rootProject.ext.rxAndroid
    implementation rootProject.ext.rxKotlin
    implementation rootProject.ext.simpleText
    implementation rootProject.ext.retrofit
    implementation rootProject.ext.okHttp
    implementation rootProject.ext.gson
    implementation rootProject.ext.rxJavaAdapter
    implementation rootProject.ext.gsonConverter
    implementation rootProject.ext.picasso
    implementation rootProject.ext.glide
    implementation rootProject.ext.materialSpinner
    annotationProcessor rootProject.ext.glideAnnotation
    implementation rootProject.ext.coroutinesCore
    implementation rootProject.ext.anko
    implementation rootProject.ext.ankoCoroutines
    implementation rootProject.ext.lifecycleExt
    annotationProcessor rootProject.ext.lifecycleAnnotation
    implementation rootProject.ext.lifecycleViewModelKtx
    implementation rootProject.ext.roomRuntime
    kapt rootProject.ext.roomCompiler
    implementation rootProject.ext.pagingRuntime
    kapt rootProject.ext.dataBindingCompilerKapt
    annotationProcessor rootProject.ext.dataBindingCompilerAnnotation
    implementation rootProject.ext.stethoCore
    implementation rootProject.ext.stethoOkHttp
    implementation rootProject.ext.stethoUrlConnection
    implementation rootProject.ext.liveTools
    implementation rootProject.ext.materialDesign
    implementation rootProject.ext.fbShare
    implementation rootProject.ext.expandableLayout
    implementation rootProject.ext.imageSlider
    implementation "org.jetbrains.anko:anko-design:$anko_version"

    testImplementation rootProject.ext.jUnit
    testImplementation rootProject.ext.archCoreTest
    testImplementation rootProject.ext.roomTest
    testImplementation rootProject.ext.pagingTest

    androidTestImplementation('androidx.test.espresso:espresso-core:3.1.0', {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.google.code.findbugs'
    })
    implementation("io.coil-kt:coil:0.7.0")
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

}
repositories {
    mavenCentral()
}

ktlint {
    debug = true
    verbose = true
    android = false
    outputToConsole = true
    ignoreFailures = true
    enableExperimentalRules = true
    additionalEditorconfigFile = file("/some/additional/.editorconfig")
    kotlinScriptAdditionalPaths {
        include fileTree("scripts/")
    }
    filter {
        exclude("**/generated/**")
        include("**/kotlin/**")
    }
}
